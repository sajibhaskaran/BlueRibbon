@model Blue_Ribbon.Models.ReviewLog

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="">
        <h4>ReviewLog</h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                    @Html.LabelFor(model => model.ASIN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ASIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ASIN, "", new { @class = "text-danger" })
                    </div>
                </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.WebsiteAPIId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WebsiteAPIId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WebsiteAPIId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.CustomerReviewed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CustomerReviewed)
                        @Html.ValidationMessageFor(model => model.CustomerReviewed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.AutomaticValidation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AutomaticValidation)
                        @Html.ValidationMessageFor(model => model.AutomaticValidation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.AdminReviewed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AdminReviewed)
                        @Html.ValidationMessageFor(model => model.AdminReviewed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.DisplayReview, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.DisplayReview)
                        @Html.ValidationMessageFor(model => model.DisplayReview, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
        <div class="form-group">
            @Html.HiddenFor(model => model.ASIN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.ReviewSubject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewSubject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewSubject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    </div>
                *@

                

                    <div class="form-horizontal">


                        @Html.RadioButtonFor(model => Model.Rating, "1")
                        @Html.Label("1")


                        @Html.RadioButtonFor(model => Model.Rating, "2")
                        @Html.Label("2")


                        @Html.RadioButtonFor(model => Model.Rating, "3")
                        @Html.Label("3")


                        @Html.RadioButtonFor(model => Model.Rating, "4")
                        @Html.Label("4")


                        @Html.RadioButtonFor(model => Model.Rating, "5")
                        @Html.Label("5")


                    </div>
                </div>



                    @*<div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>*@



                
       
            <div class="form-group">
                @Html.LabelFor(model => model.ReviewBody, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p>
                        If your review is less than 3 stars please contact <br />Blue Ribbon Reviews directly at <a href="mailto:support@blueribbonreview.com">support@blueribbonreview.com</a>.
                        <br />Please leave a review of 70 or more words.
                    </p>
                    @Html.TextAreaFor(model => model.ReviewBody, new { @rows = 20, @cols = 100 })

                </div>
                        @*<textarea id="ReviewBody" class="form-control" rows="7"></textarea>*@
                        @* @Html.EditorFor(model => model.ReviewBody, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReviewBody, "", new { @class = "text-danger" })*@
                    
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.WouldBuyAgain, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.WouldBuyAgain)
                            @Html.ValidationMessageFor(model => model.WouldBuyAgain, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RecToFriend, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.RecToFriend)
                            @Html.ValidationMessageFor(model => model.RecToFriend, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
            @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="CreateMock" class="btn btn-default" />
                </div>*@
        </div>
    
</div>

    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
